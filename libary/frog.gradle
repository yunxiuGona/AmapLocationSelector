apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def siteUrl = 'https://github.com/15563988825/AmapLocationSelector/tree/master/libary' // 项目主页。
def gitUrl = 'https://github.com/15563988825/AmapLocationSelector.git' // Git仓库的url。

group = "com.qcit.mapselector"

version = "0.5"

install {
    repositories.mavenInstaller {
        // 生成pom.xml和参数
        pom {
            project {
                packaging 'aar' // 包格式aar、jar
                // 项目描述
                name 'location_selector'// 可选，项目名称。
                description 'amap location select project'// 可选，项目描述。
                url siteUrl // 项目主页，这里是引用上面定义好。

                // 软件开源协议，现在一般都是Apache License2.0吧，可以不需要修改。
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                //填写开发者基本信息，填写你bintray网站上个人信息，上面步骤有提过。
                developers {
                    developer {
                        id '15563988825' // 开发者的id。
                        name 'wang' // 开发者名字。
                        email 'bookpiao@gmail.com' // 开发者邮箱。
                    }
                }

                // 可以不需要修改。
                scm {
                    connection gitUrl // Git仓库地址。
                    developerConnection gitUrl // Git仓库地址。
                    url siteUrl // 项目主页。
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    // destinationDir = file("../javadoc/")
    failOnError false // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
}


task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    // Bintray网站的用户名，我这里把下面bintray.user这个键的值写在local.properties文件
    user = properties.getProperty("bintray.user")
    // Bintray网站的的ApiKey，前面步骤有提到，我这里把下面bintray.apikey这个键的值写在local.properties文件
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "qcitMaven"  //Repository名字 需要自己在bintray网站上先添加
        name = "amapLocationSelector"// 发布到Bintray上的项目名字,你在bintray网站上新建的包名
        userOrg = '15563988825'//Bintray的组织id，可以填写的你的开发者的id
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true // 是否是公开项目。
    }
}